"use strict";function _createForOfIteratorHelper(e,t){var r,a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!a){if(Array.isArray(e)||(a=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return a&&(e=a),r=0,{s:t=function(){},n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,n=!1;return{s:function(){a=a.call(e)},n:function(){var e=a.next();return s=e.done,e},e:function(e){n=!0,o=e},f:function(){try{s||null==a.return||a.return()}finally{if(n)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}var body=document.querySelector("body"),burgerButton=document.querySelector(".burger__button"),burgerWrapper=document.querySelector(".burger__nav"),outterBurger=document.querySelector(".outter"),burgerLinks=document.querySelectorAll(".burger__list-link"),featureItemArr=(burgerButton.addEventListener("click",function(e){body.classList.toggle("active"),burgerButton.classList.toggle("active"),burgerWrapper.classList.toggle("active"),outterBurger.classList.toggle("active")}),outterBurger.addEventListener("click",function(e){body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active")}),burgerLinks.forEach(function(t){burgerWrapper.addEventListener("click",function(e){e.target===t&&(body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active"))})}),window.addEventListener("resize",function(){1024<=window.innerWidth&&(body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active")),499<window.innerWidth&&swiper.update()}),document.querySelectorAll(".features__list-item"));function handleMouseEnter(e){var t,r=_createForOfIteratorHelper(e.parentNode.children);try{for(r.s();!(t=r.n()).done;){var a=t.value;a!==e&&a.classList.remove("hover")}}catch(e){r.e(e)}finally{r.f()}e.classList.add("hover")}featureItemArr.forEach(function(e){e.addEventListener("mouseenter",function(){handleMouseEnter(e)})});var stepsArr=document.querySelectorAll(".step"),formButtonNextArr=document.querySelectorAll(".form__button"),formButtonBackArr=document.querySelectorAll(".back"),platesButtons=(formButtonBackArr.forEach(function(e,t){e.addEventListener("click",function(e){e.target===formButtonBackArr[0]?(stepsArr[0].classList.add("active"),stepsArr[1].classList.remove("active")):(stepsArr.forEach(function(e){e.classList.remove("active")}),stepsArr[t].classList.add("active")),e.target===formButtonBackArr[formButtonBackArr.length-1]&&(stepsArr.forEach(function(e){e.classList.remove("active")}),stepsArr[0].classList.add("active"))})}),formButtonNextArr.forEach(function(e,t){e.addEventListener("click",function(e){stepsArr[t+1].classList.add("active"),stepsArr[t].classList.remove("active")})}),document.querySelectorAll(".plates__list-button")),platesTexts=document.querySelectorAll(".plates__side-text"),platesImages=document.querySelectorAll(".plates__picture-image"),swiper=(platesButtons.forEach(function(e,t){e.addEventListener("click",function(e){platesTexts.forEach(function(e){e.classList.remove("active")}),platesImages.forEach(function(e){e.classList.remove("active")}),platesButtons.forEach(function(e){e.classList.remove("active")}),platesTexts[t].classList.add("active"),platesImages[t].classList.add("active"),platesButtons[t].classList.add("active")})}),new Swiper(".comments__swiper",{direction:"horizontal",loop:!1,slidesPerView:3,slidesPerGroup:1,spaceBetween:20,autoplay:{delay:5e3,disableOnInteraction:!1},pagination:{el:".comments__pagination",type:"bullets",clickable:!0},breakpoints:{1100:{slidesPerView:3},800:{slidesPerView:2},499:{direction:"horizontal",slidesPerView:1,slidesPerGroup:1},0:{direction:"vertical",slidesPerView:2,slidesPerGroup:2,effect:"fade"}}}));$(".open-form").magnificPopup({removalDelay:300,mainClass:"mfp-fade"}),$(".gallery__box-item").magnificPopup({type:"image",preload:[0,2],mainClass:"mfp-fade"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
