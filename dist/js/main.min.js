"use strict";function _createForOfIteratorHelper(e,t){var r,n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return n&&(e=n),r=0,{s:t=function(){},n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,o=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var body=document.querySelector("body"),burgerButton=document.querySelector(".burger__button"),burgerWrapper=document.querySelector(".burger__nav"),outterBurger=document.querySelector(".outter"),burgerLinks=document.querySelectorAll(".burger__list-link"),featureItemArr=(burgerButton.addEventListener("click",function(e){body.classList.toggle("active"),burgerButton.classList.toggle("active"),burgerWrapper.classList.toggle("active"),outterBurger.classList.toggle("active")}),outterBurger.addEventListener("click",function(e){body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active")}),burgerLinks.forEach(function(t){burgerWrapper.addEventListener("click",function(e){e.target===t&&(body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active"))})}),window.addEventListener("resize",function(){1024<=window.innerWidth&&(body.classList.remove("active"),burgerButton.classList.remove("active"),burgerWrapper.classList.remove("active"),outterBurger.classList.remove("active")),499<window.innerWidth&&swiper.update()}),document.querySelectorAll(".features__list-item"));function handleMouseEnter(e){var t,r=_createForOfIteratorHelper(e.parentNode.children);try{for(r.s();!(t=r.n()).done;){var n=t.value;n!==e&&n.classList.remove("hover")}}catch(e){r.e(e)}finally{r.f()}e.classList.add("hover")}featureItemArr.forEach(function(e){e.addEventListener("mouseenter",function(){handleMouseEnter(e)})});var stepsArr=document.querySelectorAll(".step"),formButtonNextArr=document.querySelectorAll(".form__button"),formButtonBackArr=document.querySelectorAll(".back"),fieldset=(formButtonBackArr.forEach(function(e,t){e.addEventListener("click",function(e){e.target===formButtonBackArr[0]?(stepsArr[0].classList.add("active"),stepsArr[1].classList.remove("active")):(stepsArr.forEach(function(e){e.classList.remove("active")}),stepsArr[t].classList.add("active")),e.target===formButtonBackArr[formButtonBackArr.length-1]&&(stepsArr.forEach(function(e){e.classList.remove("active")}),stepsArr[0].classList.add("active"))})}),formButtonNextArr.forEach(function(e,t){e.addEventListener("click",function(e){stepsArr[t+1].classList.add("active"),stepsArr[t].classList.remove("active")})}),document.querySelectorAll(".form__wrapper")),radioInputs=document.querySelectorAll(".radio-input"),buttonGrey=document.querySelectorAll(".button-grey"),simpleInputs=document.querySelectorAll(".input-simple"),lastInputs=[document.querySelector(".input-text"),document.querySelector(".input-tel")],inputKitchen=document.querySelectorAll("input[name=type_kitchen]"),inputFacade=document.querySelectorAll("input[name=type_facade]"),inputimplement=document.querySelectorAll("input[name=type_implement]"),inputTabletop=document.querySelectorAll("input[name=type_tabletop"),platesButtons=(fieldset.forEach(function(e,n){console.log(buttonGrey[n]),e.addEventListener("click",function(r){radioInputs.forEach(function(e,t){r.target===e&&(console.log("qweqwe"),console.log(buttonGrey[n+1]),buttonGrey[n].classList.add("orange"),buttonGrey[n].removeAttribute("disabled"))}),r.target===document.querySelector(".input-number")&&document.querySelector(".input-number").addEventListener("blur",function(e){console.log(e.target.value),""===document.querySelector(".input-number").value?(document.querySelector(".input-number").classList.add("invalid"),buttonGrey[n].classList.remove("orange"),buttonGrey[n].disabled=!0):(document.querySelector(".input-number").classList.remove("invalid"),buttonGrey[n].classList.add("orange"),buttonGrey[n].removeAttribute("disabled"))}),r.target===document.querySelector(".input-text")&&document.querySelector(".input-text").addEventListener("blur",function(e){""===document.querySelector(".input-text").value?document.querySelector(".input-text").classList.add("invalid"):document.querySelector(".input-text").classList.remove("invalid")}),r.target===document.querySelector(".input-tel")&&document.querySelector(".input-tel").addEventListener("blur",function(e){""===document.querySelector(".input-tel").value?document.querySelector(".input-tel").classList.add("invalid"):document.querySelector(".input-tel").classList.remove("invalid")}),lastInputs.forEach(function(e){e.addEventListener("blur",function(e){document.querySelector(".input-text").classList.contains("invalid")||document.querySelector(".input-tel").classList.contains("invalid")?(console.log("qweqwe"),console.log(buttonGrey[n+1]),buttonGrey[5].classList.remove("orange"),buttonGrey[5].disabled=!0):(buttonGrey[5].classList.add("orange"),buttonGrey[5].removeAttribute("disabled"))})})})}),document.querySelectorAll(".plates__list-button")),platesTexts=document.querySelectorAll(".plates__side-text"),platesImages=document.querySelectorAll(".plates__picture-image"),swiper=(platesButtons.forEach(function(e,t){e.addEventListener("click",function(e){platesTexts.forEach(function(e){e.classList.remove("active")}),platesImages.forEach(function(e){e.classList.remove("active")}),platesButtons.forEach(function(e){e.classList.remove("active")}),platesTexts[t].classList.add("active"),platesImages[t].classList.add("active"),platesButtons[t].classList.add("active")})}),new Swiper(".comments__swiper",{direction:"horizontal",loop:!0,slidesPerView:3,slidesPerGroup:1,spaceBetween:20,autoplay:{delay:5e3,disableOnInteraction:!1},pagination:{el:".comments__pagination",type:"bullets",clickable:!0},breakpoints:{1100:{slidesPerView:3},800:{slidesPerView:2},499:{direction:"horizontal",slidesPerView:1,slidesPerGroup:1},0:{direction:"vertical",slidesPerView:2,slidesPerGroup:2,effect:"fade"}}}));$(".open-form").magnificPopup({removalDelay:300,mainClass:"mfp-fade"}),$(".gallery__box-item").magnificPopup({type:"image",preload:[0,2],mainClass:"mfp-fade"}),$(".form-popup").submit(function(e){var t=$(this);return console.log(t),$.ajax({type:"POST",url:"index.php",data:t.serialize()}).done(function(){alert("Ваша заявка отправлена!"),setTimeout(function(){$(".mfp-close").click(),t.trigger("reset")},1e3)}),!1}),$(".test__form").submit(function(e){var t=$(this);return console.log(t),$.ajax({type:"POST",url:"test_index.php",data:t.serialize()}).done(function(){alert("Ваша заявка отправлена!"),setTimeout(function(){t.trigger("reset")},1e3)}),!1});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
